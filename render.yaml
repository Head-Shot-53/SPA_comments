# render.yaml — Blueprint для Render

services:
  # === Backend (Django ASGI + WebSockets) ===
  - type: web
    name: spa-comments-backend
    runtime: docker
    rootDir: backend
    dockerfilePath: Dockerfile
    # dockerContext за замовчуванням = rootDir; можна опустити або залишити явно:
    # dockerContext: .
    plan: starter
    autoDeploy: true
    envVars:
      - key: DJANGO_SECRET_KEY
        generateValue: true
      - key: DJANGO_DEBUG
        value: "False"
      - key: ALLOWED_HOSTS
        value: "*"
      - key: DATABASE_URL
        fromDatabase:
          name: spa-comments-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: spa-comments-redis
          type: keyvalue
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          name: spa-comments-redis
          type: keyvalue
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: spa-comments-redis
          type: keyvalue
          property: connectionString
      - key: MEDIA_ROOT
        value: "/app/media"
      - key: MEDIA_URL
        value: "/media/"
      - key: FRONTEND_ORIGIN
        value: "https://spa-comments-frontend.onrender.com"
      - key: CORS_ALLOWED_ORIGINS
        value: "https://spa-comments-frontend.onrender.com"
      - key: CSRF_TRUSTED_ORIGINS
        value: "https://spa-comments-frontend.onrender.com"
    disk:
      name: media-disk
      mountPath: /app/media
      sizeGB: 5
    # Для Docker сервіс Render запускає CMD з Dockerfile; якщо потрібно — можна додати:
    # dockerCommand: "daphne -b 0.0.0.0 -p $PORT spa_comments.asgi:application"

  # === Celery worker ===
  - type: worker
    name: spa-comments-worker
    runtime: docker
    rootDir: backend
    dockerfilePath: Dockerfile
    plan: starter
    autoDeploy: true
    dockerCommand: "celery -A spa_comments worker -l info"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: spa-comments-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: spa-comments-redis
          type: keyvalue
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          name: spa-comments-redis
          type: keyvalue
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: spa-comments-redis
          type: keyvalue
          property: connectionString
      - key: DJANGO_SECRET_KEY
        sync: false

  # === Celery beat ===
  - type: worker
    name: spa-comments-beat
    runtime: docker
    rootDir: backend
    dockerfilePath: Dockerfile
    plan: starter
    autoDeploy: true
    dockerCommand: "celery -A spa_comments beat -l info"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: spa-comments-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: spa-comments-redis
          type: keyvalue
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          name: spa-comments-redis
          type: keyvalue
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: spa-comments-redis
          type: keyvalue
          property: connectionString
      - key: DJANGO_SECRET_KEY
        sync: false

  # === Frontend (Vite) як Static Site ===
  - type: web
    name: spa-comments-frontend
    runtime: static
    rootDir: frontend
    buildCommand: "npm ci && npm run build"
    staticPublishPath: "./dist"
    envVars:
      - key: VITE_API_BASE
        value: "https://spa-comments-backend.onrender.com/api"
      - key: VITE_WS_URL
        value: "wss://spa-comments-backend.onrender.com/ws/comments/"

  # === Redis (Render Key-Value) для Celery/Channels ===
  - type: keyvalue
    name: spa-comments-redis
    plan: starter
    # MUST HAVE: список дозволених IP для зовнішніх з’єднань
    # (для простоти відкриваємо всім; за потреби звузиш діапазон)
    ipAllowList:
      - source: 0.0.0.0/0
        description: everywhere

databases:
  - name: spa-comments-db
    plan: starter
