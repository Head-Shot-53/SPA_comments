services:
  - type: web
    name: spa-comments-web
    env: python
    region: frankfurt
    plan: starter
    buildCommand: |
      pip install -U pip
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
    startCommand: gunicorn spa_comments.wsgi:application --workers=3 --timeout 90 --bind 0.0.0.0:$PORT
    healthCheckPath: /api/health/
    autoDeploy: true
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: spa_comments.settings
      - key: DEBUG
        value: "False"
      - key: SECRET_KEY
        generateValue: true
      - key: ALLOWED_HOSTS
        value: spa-comments-web.onrender.com
      - key: CSRF_TRUSTED_ORIGINS
        value: https://spa-comments-web.onrender.com,https://spa-comments-frontend.onrender.com
      - key: CORS_ALLOWED_ORIGINS
        value: https://spa-comments-frontend.onrender.com
      - key: MEDIA_ROOT
        value: /data/media
      - key: REDIS_URL
        fromService:
          type: redis
          name: spa-comments-redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: spa-comments-postgres
          property: connectionString
    disk:
      name: media
      mountPath: /data
      sizeGB: 1
    postDeployCommand: |
      python manage.py migrate --noinput

  - type: worker
    name: spa-comments-worker
    env: python
    region: frankfurt
    plan: starter
    buildCommand: |
      pip install -U pip
      pip install -r requirements.txt
    startCommand: celery -A spa_comments worker -l info --concurrency=2
    autoDeploy: true
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: spa_comments.settings
      - key: SECRET_KEY
        sync: false
      - key: REDIS_URL
        fromService:
          type: redis
          name: spa-comments-redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: spa-comments-postgres
          property: connectionString

  - type: worker
    name: spa-comments-beat
    env: python
    region: frankfurt
    plan: starter
    buildCommand: |
      pip install -U pip
      pip install -r requirements.txt
    startCommand: celery -A spa_comments beat -l info
    autoDeploy: true
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: spa_comments.settings
      - key: SECRET_KEY
        sync: false
      - key: REDIS_URL
        fromService:
          type: redis
          name: spa-comments-redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: spa-comments-postgres
          property: connectionString

  - type: static
    name: spa-comments-frontend
    env: static
    buildCommand: npm ci && npm run build
    staticPublishPath: frontend/dist
    routes:
      - type: rewrite
        source: "/(.*)"
        destination: "/index.html"
    envVars:
      - key: VITE_API_BASE
        value: https://spa-comments-web.onrender.com/api

databases:
  - name: spa-comments-postgres
    plan: starter
    region: frankfurt

redis:
  - name: spa-comments-redis
    plan: starter
    region: frankfurt
